{"version":3,"file":"247-b86326caf0f679ddcf3b.js","mappings":"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","sources":["webpack://zero-ui-preview/../../packages/zero-ui-web/dist/esm/zero-input.entry.js","webpack://zero-ui-preview/../../packages/zero-ui-web/dist/esm/url-2aee24a7.js"],"sourcesContent":["import { r as registerInstance, c as createEvent, h } from './index-1d2cc430.js';\nimport { a as validatePassword, v as validateMail, b as validatePhone, c as validateUrl } from './url-2aee24a7.js';\n\nconst inputCss = \":host{-webkit-appearance:none !important;-moz-appearance:none !important;appearance:none !important}label,p.value{color:var(--color-text, #000);font-family:var(--font, 'sans-serif');font-weight:600;letter-spacing:0.02rem;font-size:0.8rem;text-transform:capitalize;-webkit-user-select:none;-moz-user-select:none;user-select:none;margin:0;padding:0}input{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;background:transparent;border-radius:0;font-size:1.1rem;font-weight:500;color:var(--color-text, #000);width:100%;max-width:var(--max-width, 100%);box-sizing:border-box;outline:none;font-family:var(--font, 'sans-serif');padding:0;margin:0}input[type='color']{padding:0;border:none;background:transparent;border-radius:1rem;-webkit-appearance:none;-moz-appearance:none;appearance:none}input[type='color']::-webkit-color-swatch{border:none;border-radius:0.25rem;cursor:pointer}input[type='range']{margin:0;width:100%;height:0.5rem;border-radius:1rem;background:var(--color-scaffold, #fff);margin-top:0.5rem}input[type='range']::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;background:var(--color-text, #000);border-radius:100%;width:1rem;height:1rem;cursor:pointer}input[type='checkbox']{position:relative;margin:0;width:1.4rem;height:1.4rem;border:2px solid var(--color-text, #000);-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:0.25rem;cursor:pointer}input[type='checkbox']:checked::after{content:'';position:absolute;top:15%;left:28%;border-width:0 2px 2px 0;border-color:var(--color-text, #000);border-style:solid;height:45%;width:30%;transform:rotate(45deg)}input[type='file']{display:none}input::-moz-placeholder{color:var(--color-text, #000);opacity:0.25;font-family:var(--font, 'sans-serif');font-weight:400;letter-spacing:0.02rem;font-size:1.1rem}input::placeholder{color:var(--color-text, #000);opacity:0.25;font-family:var(--font, 'sans-serif');font-weight:400;letter-spacing:0.02rem;font-size:1.1rem}input::-webkit-search-decoration,input::-webkit-search-cancel-button,input::-webkit-search-results-button,input::-webkit-search-results-decoration,input::-webkit-clear-button,input::-webkit-inner-spin-button,input::-webkit-outer-spin-button,input::-webkit-calendar-picker-indicator{display:none}.error{height:100%;max-height:0;opacity:0;transition:max-height 0.3s ease-in-out, opacity 0.3s ease-in-out}.show-error .error{max-height:4rem;opacity:1}\";\n\nconst ZeroInput = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.valueChanged = createEvent(this, \"valueChanged\", 7);\n    this.type = 'text';\n    this.placeholder = `Enter ${this.type} here`;\n    this.name = 'input';\n    this.label = 'Input';\n    this.min = 0;\n    this.max = 100;\n    this.step = 0.01;\n    this.valueTemplate = '{{value}}';\n    this.direction = 'auto';\n    // Container Properties\n    this.elevation = 0;\n    this.padding = 0.8;\n    this.paddingRatio = 1.2;\n    this.validate = false;\n    this.required = false;\n    this.showErrorBeforeType = false;\n    this.hasTyped = false;\n    this.errorLabel = '';\n    this.horizontalInputs = ['color', 'checkbox'];\n  }\n  errorValue() {\n    if (!this.validator) {\n      return undefined;\n    }\n    const validation = this.validator(this.value);\n    if (!this.validate || validation === true) {\n      return undefined;\n    }\n    else if (typeof validation === 'string') {\n      this.errorLabel = validation;\n      return validation;\n    }\n    return undefined;\n  }\n  get correctDirection() {\n    if (this.direction === 'auto') {\n      return this.horizontalInputs.includes(this.type)\n        ? 'horizontal'\n        : 'vertical';\n    }\n    return this.direction;\n  }\n  get spacing() {\n    return this.correctDirection === 'vertical' ? 0.4 : 1;\n  }\n  componentWillLoad() {\n    if (this.type === 'range' && !this.value) {\n      this.value = `${this.min}`;\n    }\n    if (!this.validator) {\n      if (this.type === 'text') {\n        this.validator = (value) => {\n          if (!this.validate || (!this.showErrorBeforeType && !this.hasTyped))\n            return true;\n          if (this.required && !value)\n            return 'This field is required';\n          return true;\n        };\n      }\n      if (this.type === 'password') {\n        this.validator = (value) => {\n          if (!validatePassword(value) ||\n            (!this.showErrorBeforeType && !this.hasTyped)) {\n            return 'Password should be at least 8 characters, contain a number and a symbol.';\n          }\n          return true;\n        };\n      }\n      if (this.type === 'email') {\n        this.validator = (value) => {\n          if (!validateMail(value) ||\n            (!this.showErrorBeforeType && !this.hasTyped))\n            return 'Please enter a valid email address';\n        };\n      }\n      if (this.type === 'tel') {\n        this.validator = (value) => {\n          if (!validatePhone(value) ||\n            (!this.showErrorBeforeType && !this.hasTyped))\n            return 'Please enter a valid phone number';\n        };\n      }\n      if (this.type === 'url') {\n        this.validator = (value) => {\n          if (!validateUrl(value) ||\n            (!this.showErrorBeforeType && !this.hasTyped))\n            return 'Please enter a valid URL';\n        };\n      }\n    }\n    this.error = this.errorValue();\n  }\n  render() {\n    var _a, _b, _c;\n    return (h(\"zero-container\", { elevation: this.elevation, padding: this.padding, paddingRatio: this.paddingRatio, shadowProminence: 0.3, roundedCorners: 0.5, edgeBrightness: 0.05, edgeThickness: 0.1, glowAmount: 0.05, edgeGlow: 0.2, spacing: 0.4, background: \"var(--color-inputs, transparent)\", \"background-translucency\": 0, direction: \"horizontal\", class: {\n        'show-error': ((_a = this.error) === null || _a === void 0 ? void 0 : _a.length) > 0,\n      } }, h(\"zero-container\", { spacing: 0.3 }, h(\"zero-container\", { spacing: this.spacing, direction: this.correctDirection }, h(\"zero-container\", { direction: \"horizontal\", fill: true, flexFill: false }, h(\"zero-text\", { size: 0.9, weight: 600, icon: this.icon, family: \"Inter\" }, this.label), this.type === 'range' ? (h(\"p\", { class: \"value\" }, this.valueTemplate.replace('{{value}}', (_c = (_b = this.value) === null || _b === void 0 ? void 0 : _b.toString().trim()) !== null && _c !== void 0 ? _c : ''))) : null), h(\"input\", { name: this.name, type: this.type, placeholder: this.placeholder, min: this.min, max: this.max, step: this.step, value: this.value, onInput: (e) => {\n        this.hasTyped = true;\n        this.value = e.target.value;\n        this.valueChanged.emit(this.value);\n        this.error = this.errorValue();\n      } })), h(\"div\", { class: \"error\" }, h(\"zero-text\", { lightScheme: \"red\", darkScheme: \"red\", color: \"var(--color-primary, #000)\", size: 0.9 }, this.errorLabel)))));\n  }\n};\nZeroInput.style = inputCss;\n\nexport { ZeroInput as zero_input };\n","// make sure the mail is in a valid format\nfunction validateMail(value) {\n  const regex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n  return regex.test(value);\n}\n\n// password should at least contain one special character, one number and one capital letter\nfunction validatePassword(value) {\n  const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n  return regex.test(value);\n}\n\n// make sure the value only contains numbers, space or +\nfunction validatePhone(value) {\n  const regex = /^[0-9\\s+]*$/;\n  return regex.test(value);\n}\n\n// make sure the value is in a valid url\nfunction validateUrl(value) {\n  const regex = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/;\n  return regex.test(value);\n}\n\nexport { validatePassword as a, validatePhone as b, validateUrl as c, validateMail as v };\n"],"names":["ZeroInput","hostRef","registerInstance","this","valueChanged","createEvent","type","placeholder","name","label","min","max","step","valueTemplate","direction","elevation","padding","paddingRatio","validate","required","showErrorBeforeType","hasTyped","errorLabel","horizontalInputs","errorValue","validator","validation","value","componentWillLoad","test","validatePassword","validateMail","validatePhone","validateUrl","error","render","_a","_b","_c","h","shadowProminence","roundedCorners","edgeBrightness","edgeThickness","glowAmount","edgeGlow","spacing","background","class","length","correctDirection","fill","flexFill","size","weight","icon","family","replace","toString","trim","onInput","e","target","emit","lightScheme","darkScheme","color","includes","style"],"sourceRoot":""}