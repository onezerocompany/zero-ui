function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import { useEffect } from "@storybook/addons";
import { initializeThemeState, pluckThemeFromContext, useThemeParameters } from "./helpers";
var DEFAULT_ELEMENT_SELECTOR = "html";
export var withThemeByClassName = function withThemeByClassName(_ref) {
  var themes = _ref.themes,
      defaultTheme = _ref.defaultTheme,
      _ref$parentSelector = _ref.parentSelector,
      parentSelector = _ref$parentSelector === void 0 ? DEFAULT_ELEMENT_SELECTOR : _ref$parentSelector;
  initializeThemeState(Object.keys(themes), defaultTheme);
  return function (storyFn, context) {
    var _useThemeParameters = useThemeParameters(),
        themeOverride = _useThemeParameters.themeOverride;

    var selected = pluckThemeFromContext(context);
    useEffect(function () {
      var selectedThemeName = themeOverride || selected || defaultTheme;
      var parentElement = document.querySelector(parentSelector);
      Object.entries(themes).forEach(function (_ref2) {
        var _ref3 = _slicedToArray(_ref2, 2),
            themeName = _ref3[0],
            className = _ref3[1];

        var classNames = className.split(' ').filter(Boolean);

        if (themeName === selectedThemeName) {
          var _parentElement$classL;

          (_parentElement$classL = parentElement.classList).add.apply(_parentElement$classL, _toConsumableArray(classNames));
        } else {
          var _parentElement$classL2;

          (_parentElement$classL2 = parentElement.classList).remove.apply(_parentElement$classL2, _toConsumableArray(classNames));
        }
      });
    }, [themeOverride, selected, parentSelector]);
    return storyFn();
  };
};